# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

service: demo-event-orchestration
frameworkVersion: '2'

app: process-automation

custom:
  serverless-offline:
    httpPort: 8000
    useChildProcesses: true
  prune:
    automatic: true
    number: 1

provider:
  name: aws
  stage: dev
  runtime: nodejs14.x
  profile: ccportal
  region: eu-central-1
  deploymentBucket: my.${self:provider.stage}.serverless.deploys
  versionFunctions: false
  tracing:
    lambda: true
  logRetentionInDays: 7
  timeout: 30
  environment:
    S3_DISCONNECTED_CHATS: ${self:resources.Resources.S3DisconnectedChats.Properties.BucketName}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource:
            - '*'

functions:
  processDisconnectedChat:
    handler: handler.processDisconnectedChat
    events:
      - http:
          path: chats/disconnected
          method: post
          cors: true

resources:
  Resources:
    S3DisconnectedChats:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${opt:stage, self:provider.stage}-demo-disconnected-chats-bucket
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
          # If deploying the bucket for the first time, settings below should be set to false otherwise the Bucket Policy creation will fail. Once deployed, set them to true and deploy again.
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000
    S3DisconnectedChatsPolicy:
      DependsOn: S3DisconnectedChats
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: S3DisconnectedChats
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal: '*'
              Action: 's3:*'
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: S3DisconnectedChats
                    - '/*'

plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-plugin-common-excludes

package:
  patterns:
    - '!.serverless/**'
    - '!serverless.yml'
    - '!.env'
    - '!.git/**'
    - 'requests/**'
